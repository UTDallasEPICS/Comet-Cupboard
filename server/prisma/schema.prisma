generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("PRISMA_DB_URL")
}

model CartItems {
  cartID   Int
  itemID   Int
  quantity Int?
  value    Int?
  student  Student @relation(fields: [cartID], references: [cartID], onDelete: NoAction, onUpdate: NoAction)
  item     Item    @relation(fields: [itemID], references: [itemID], onDelete: NoAction, onUpdate: NoAction)

  @@id([cartID, itemID])
}

model Categories {
  classification String @id
  items          Int?
  item           Item[]
}

model Checkout {
  transactionID Int             @id
  workerID      Int?
  customerID    String?
  checkoutDate  DateTime?
  student       Student?        @relation(fields: [customerID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
  employee      Employee?       @relation(fields: [workerID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
  checkoutItems CheckoutItems[]
}

model CheckoutItems {
  transactionID Int
  itemID        Int
  quantity      Int?
  value         Int?
  item          Item     @relation(fields: [itemID], references: [itemID], onDelete: NoAction, onUpdate: NoAction)
  checkout      Checkout @relation(fields: [transactionID], references: [transactionID], onDelete: NoAction, onUpdate: NoAction)

  @@id([transactionID, itemID])
}

model Donors {
  ID               Int       @id
  affiliation      String?
  donationCount    Int?
  lastDonation     DateTime?
  donationDescript String?
  estDonValue      Decimal?
}

model Employee {
  ID          Int        @id
  studentID   String?
  hoursWorked Int?
  isPaid      Boolean?
  salary      Decimal?
  checkout    Checkout[]
  student     Student?   @relation(fields: [studentID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
}

model Item {
  itemID         Int             @id
  name           String?
  value          Int?
  classification String?
  imgURL         String?
  stock          Int?
  expirationDate DateTime?
  cartItems      CartItems[]
  checkoutItems  CheckoutItems[]
  categories     Categories?     @relation(fields: [classification], references: [classification], onDelete: NoAction, onUpdate: NoAction)
}

model Student {
  ID             String      @id
  fname          String?
  surname        String?
  grade          String?
  numVisits      Int?
  current_status Boolean?
  major          String?
  gender         String?
  lastLogin      DateTime?
  cartID         Int?        @unique @default(0)
  totalValue     Int?
  cartItems      CartItems[]
  checkout       Checkout[]
  employee       Employee[]
}