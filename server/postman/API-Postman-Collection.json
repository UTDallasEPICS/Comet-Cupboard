{
	"info": {
		"_postman_id": "47e08b91-424e-439a-b5dc-2839919f3006",
		"name": "Comet Cupboard API",
		"description": "Restful API that can be used to access and edit information about the users, volunteers, and items stored in the Database.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Demographics",
					"item": [
						{
							"name": "Create New Demographics Form",
							"_postman_id": "41e03bb6-6917-4047-8071-9d037ac5a591",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/user/demographics/",
								"description": "This function can be used to create a new demographics form and attach it to a user.\n\n#### **Input:**\n\nYou send a JSON object as part of the input to this endpoint.\n\nThe JSON object needs:\n\nMongo ID of the User you are trying to attach the form to,\n\nNumber of Children in the Users household,\n\nNumber of Parents in the Users household,\n\nNumber of Elderly in the Users household,\n\nand The total household income.\n\n#### **Output:**\n\nIf the user you are trying to attach the form to doesn't exist, the API will send back an error message saying the account you are trying to attach the form to doesn't exist.\n\nIf the user does exist in the database then you will receive a message saying the form was successfully saved in the database."
							},
							"response": [
								{
									"id": "a628c7f8-e06f-4f3c-a3dc-fbb7a5a78b64",
									"name": "Create New Demographics Form",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userID\": \"635742865efef60414df4fca\",\r\n    \"numChild\": 2,\r\n    \"numParents\": 2,\r\n    \"numOld\": 2,\r\n    \"income\": 13000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:3000/api/v1/user/demographics/"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "58"
										},
										{
											"key": "ETag",
											"value": "W/\"3a-8FeR/NmAkhKhClVH8rHNE/qklaw\""
										},
										{
											"key": "Date",
											"value": "Tue, 29 Nov 2022 00:56:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Successfully created new demographics form! \"\n}"
								}
							]
						},
						{
							"name": "Get All Demographics",
							"_postman_id": "af217bdb-013e-4b7b-9af6-b793ea3713a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/user/demographics/",
								"description": "This function is used to access all existing demographics forms in the database.\n\n#### **Input:**\n\nNo Inputs needed.\n\n#### **Output:**\n\nThe output is an array that contains all existing demographic forms."
							},
							"response": [
								{
									"id": "532e5768-e1bf-4265-b6a2-d76f8138084d",
									"name": "Get All Demographics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "http://localhost:3000/api/v1/user/demographics/"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "651"
										},
										{
											"key": "ETag",
											"value": "W/\"28b-5kkAfk/mNKdiOOeHbH0UCSjQYeA\""
										},
										{
											"key": "Date",
											"value": "Tue, 29 Nov 2022 01:13:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"demographics\": [\n        {\n            \"_id\": \"638558b0ba8f7b245faff397\",\n            \"userID\": \"635742865efef60414df4fca\",\n            \"numChild\": 2,\n            \"numParents\": 2,\n            \"numOld\": 2,\n            \"income\": 13000,\n            \"createdAt\": \"2022-11-29T00:56:16.757Z\",\n            \"updatedAt\": \"2022-11-29T00:56:16.757Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"63855c7dba8f7b245faff39b\",\n            \"userID\": \"6372df372f8b016f06f55f08\",\n            \"numChild\": 4,\n            \"numParents\": 1,\n            \"numOld\": 3,\n            \"income\": 20500,\n            \"createdAt\": \"2022-11-29T01:12:29.482Z\",\n            \"updatedAt\": \"2022-11-29T01:12:29.482Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"63855c9cba8f7b245faff39e\",\n            \"userID\": \"63854fe7b3e8c4338ce812a7\",\n            \"numChild\": 1,\n            \"numParents\": 3,\n            \"numOld\": 1,\n            \"income\": 32400,\n            \"createdAt\": \"2022-11-29T01:13:00.007Z\",\n            \"updatedAt\": \"2022-11-29T01:13:00.007Z\",\n            \"__v\": 0\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Specific Form",
							"_postman_id": "37233e46-4d86-4b74-b1bf-d71aa7d0a6b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/user/demographics/638558b0ba8f7b245faff397",
								"description": "This function is used to access a specific form's information.\n\n#### Input:\n\nAt the end of the URL path, you add the MongoDB ID of the form.\n\n#### Output:\n\nThe output will contain a single object, \"demographic\", with all the info of the form."
							},
							"response": [
								{
									"id": "5b952a08-4a8e-4d50-b839-efce40e764f6",
									"name": "Get Specific Form",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "http://localhost:3000/api/v1/user/demographics/638558b0ba8f7b245faff397"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "226"
										},
										{
											"key": "ETag",
											"value": "W/\"e2-pT994zlaKJEW4ApxPJVSVmBGs1s\""
										},
										{
											"key": "Date",
											"value": "Tue, 29 Nov 2022 01:18:30 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"demographic\": {\n        \"_id\": \"638558b0ba8f7b245faff397\",\n        \"userID\": \"635742865efef60414df4fca\",\n        \"numChild\": 2,\n        \"numParents\": 2,\n        \"numOld\": 2,\n        \"income\": 13000,\n        \"createdAt\": \"2022-11-29T00:56:16.757Z\",\n        \"updatedAt\": \"2022-11-29T00:56:16.757Z\",\n        \"__v\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Updating Existing Form",
							"_postman_id": "abb9df6e-65f6-4c5c-bba7-e642ef622497",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/user/demographics/",
								"description": "This function is used to update the info on forms that are currently stored on the system.\n\n#### Input:\n\nYou send a JSON object as part of the input to this endpoint.\n\nThe JSON object needs:\n\nMongo ID of the User you are trying to attach the form to,\n\nNumber of Children in the Users household,\n\nNumber of Parents in the Users household,\n\nNumber of Elderly in the Users household,\n\nand The total household income.\n\n#### Output:\n\nYou will get a message that will let you know if the update was successful or if there was an error."
							},
							"response": [
								{
									"id": "f47c6d45-6888-47e1-a75a-4640a6f35c22",
									"name": "Updating Existing Form",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userID\": \"635742865efef60414df4fca\",\r\n    \"numChild\": 1,\r\n    \"numParents\": 1,\r\n    \"numOld\": 1,\r\n    \"income\": 3000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:3000/api/v1/user/demographics/"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-wx55/LTkmkRLM1HKWEcPPZLkTrI\""
										},
										{
											"key": "Date",
											"value": "Tue, 29 Nov 2022 01:24:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Successfully updated form!\"\n}"
								}
							]
						}
					],
					"_postman_id": "1f0bb619-1d30-4866-92ee-d38f485d1a24",
					"description": "The Demographics of each student includes their household income, the number of children, the number of parents/ guardians, and the number of elderly that live in their home.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Get ALL Users",
					"_postman_id": "d3d33de6-1f79-4e7c-aa6d-aab2ef51ae19",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/user",
						"description": "StartFragment\n\nThis function is used to access all existing Users in the database.\n\n#### **Input:**\n\nNo Inputs needed.\n\n#### **Output:**\n\nThe output is an array that contains all Users in the system.\n\nEndFragment"
					},
					"response": [
						{
							"id": "8b717558-1fa6-48fa-8566-5e42d97a1528",
							"name": "Get ALL Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/user"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "ETag",
									"value": "W/\"1b5-QSNJ3+qgoklAD5eUVa+Rf2jQ7pc\""
								},
								{
									"key": "Date",
									"value": "Tue, 29 Nov 2022 00:54:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"accounts\": [\n        {\n            \"_id\": \"635742865efef60414df4fca\",\n            \"netID\": \"qwe123123\",\n            \"createdAt\": \"2022-10-25T01:57:26.847Z\",\n            \"updatedAt\": \"2022-10-25T01:57:26.847Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"6372df372f8b016f06f55f08\",\n            \"netID\": \"asd456456\",\n            \"createdAt\": \"2022-11-15T00:37:11.921Z\",\n            \"updatedAt\": \"2022-11-15T00:37:11.921Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"63854fe7b3e8c4338ce812a7\",\n            \"netID\": \"zxc456456\",\n            \"createdAt\": \"2022-11-29T00:18:48.112Z\",\n            \"updatedAt\": \"2022-11-29T00:18:48.112Z\",\n            \"__v\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Specific User",
					"_postman_id": "24a09a97-5207-449c-a883-da0c7438adfd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/user/635742865efef60414df4fca",
						"description": "This function is used to access a specific form's information.\n\n#### Input:\n\nAt the end of the URL path, you add the MongoDB ID of the User.\n\n#### Output:\n\nThe output will contain a single object, \"account\", with all the info of the form."
					},
					"response": [
						{
							"id": "77f09b15-90da-4be9-b081-75f602fe1f2e",
							"name": "Get User with net id qwe123123",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/user/635742865efef60414df4fca"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "152"
								},
								{
									"key": "ETag",
									"value": "W/\"98-4ZYk6Z/w2yLshZNBSv6HXEaxl70\""
								},
								{
									"key": "Date",
									"value": "Tue, 29 Nov 2022 00:38:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"account\": {\n        \"_id\": \"635742865efef60414df4fca\",\n        \"netID\": \"qwe123123\",\n        \"createdAt\": \"2022-10-25T01:57:26.847Z\",\n        \"updatedAt\": \"2022-10-25T01:57:26.847Z\",\n        \"__v\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Create New User",
					"_postman_id": "9ad81995-1d84-4e7d-8b90-758dc91849ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/user/",
						"description": "This function is used to add a new user to the database.\n\n#### Input:\n\nThe input is a JSON object that has the net ID of the user you are adding to the system.\n\n#### Output:\n\nThe output is a message that will inform you if the creation was successful or if there was an error."
					},
					"response": [
						{
							"id": "bca86aaa-1268-4fa5-a70c-52fe191f83c7",
							"name": "Creating a brand new user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"netID\": \"zxc456456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/user/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "43"
								},
								{
									"key": "ETag",
									"value": "W/\"2b-a6IKpzCoZ6lOe5+bBATjwgYKuqM\""
								},
								{
									"key": "Date",
									"value": "Tue, 29 Nov 2022 00:18:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully created account!\"\n}"
						}
					]
				},
				{
					"name": "Delete a User",
					"_postman_id": "a4d98a27-334a-4f97-8a3a-630c3f1cce40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:3000/api/v1/user/6372df372f8b016f06f55f08"
					},
					"response": [
						{
							"id": "ba615d8c-f182-4152-8f47-58d4d3871217",
							"name": "Delete a User",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:3000/api/v1/user/6372df372f8b016f06f55f08"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "42"
								},
								{
									"key": "ETag",
									"value": "W/\"2a-7pmSug69piW3OtRxVeMJV92uhM4\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Dec 2022 05:51:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully deleted account\"\n}"
						}
					]
				}
			],
			"_postman_id": "df36adca-bf4f-4b43-a4aa-f5a89bc1e884",
			"description": "Users of the pantry will have their netID saved in the system."
		},
		{
			"name": "WorkerLogs",
			"item": [
				{
					"name": "Create new log",
					"_postman_id": "74258816-0154-45b9-abb1-34ecfcca56c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/workerLogs/6397f27cec21735cd38f2584",
						"description": "This function is used to create a new worker log.\n\n#### Input:\n\nAfter the /workerLogs/id path, the route must be provided the Mongo ID of the employee who is trying to create a worker log in the params field. In addition, the body requires an integer meant to represent the amount of time worked.\n\n**Output:**\n\nIf successful, the system will send a message saying \"Successfully created worker log\""
					},
					"response": [
						{
							"id": "8c4d6f81-81ee-4881-bc7c-10b815d9b152",
							"name": "Create new log",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"timeWorked\": 12\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/workerLogs/6397f27cec21735cd38f2584"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "45"
								},
								{
									"key": "ETag",
									"value": "W/\"2d-c5FWHgbC2U3HluOt63BHWfARj+k\""
								},
								{
									"key": "Date",
									"value": "Tue, 13 Dec 2022 03:33:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully created worker log\"\n}"
						}
					]
				},
				{
					"name": "Get all workerLogs",
					"_postman_id": "ac1ba8fe-f8d5-4997-808f-ea343322326f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/workerLogs/",
						"description": "#### Input:\n\nThis function requires no input other than accessing the route path\n\n#### Output:\n\nIf there are worker logs, the function will return all of them.\n\nIf no worker logs exist, the system will send a message saying \"Could not find worker logs\""
					},
					"response": [
						{
							"id": "e8fffe04-dd82-44ba-b9b1-9ff335d0b0b5",
							"name": "Get all workerLogs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/workerLogs/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "547"
								},
								{
									"key": "ETag",
									"value": "W/\"223-nnHa++IYPLRowsiqXsvKRSXuBwQ\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Dec 2022 04:23:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"workerLogs\": [\n        {\n            \"_id\": \"6397f21fec21735cd38f257f\",\n            \"employeeID\": \"6397f0f0ec21735cd38f257d\",\n            \"timeWorked\": 20,\n            \"createdAt\": \"2022-12-13T03:31:43.680Z\",\n            \"updatedAt\": \"2022-12-13T03:31:43.680Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"6397f22aec21735cd38f2581\",\n            \"employeeID\": \"6397f0f0ec21735cd38f257d\",\n            \"timeWorked\": 32,\n            \"createdAt\": \"2022-12-13T03:31:54.327Z\",\n            \"updatedAt\": \"2022-12-13T03:31:54.327Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"6397f28bec21735cd38f2586\",\n            \"employeeID\": \"6397f27cec21735cd38f2584\",\n            \"timeWorked\": 12,\n            \"createdAt\": \"2022-12-13T03:33:31.768Z\",\n            \"updatedAt\": \"2022-12-13T03:33:31.768Z\",\n            \"__v\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get worker log by id",
					"_postman_id": "01b0068e-aee5-4e05-8a04-cc661331f447",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/workerLogs/6397f0f0ec21735cd38f257d",
						"description": "#### Input:\n\nUpon accessing the route path, the route must be provided the unique MongoID of the employee who's worker logs you are trying to find\n\n#### Output:\n\nIf no ID was provided, the system will send out an error message saying \"Id is required\".\n\nOtherwise, it will return all the worker logs associated with the employee id."
					},
					"response": [
						{
							"id": "4029f1cb-f2d7-49ce-becb-03dc081c29d0",
							"name": "Get worker log by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/workerLogs/6397f0f0ec21735cd38f257d"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "369"
								},
								{
									"key": "ETag",
									"value": "W/\"171-MfEg1pna971Gp+Cl3/UE8oB7UkE\""
								},
								{
									"key": "Date",
									"value": "Tue, 13 Dec 2022 03:37:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"workerLog\": [\n        {\n            \"_id\": \"6397f21fec21735cd38f257f\",\n            \"employeeID\": \"6397f0f0ec21735cd38f257d\",\n            \"timeWorked\": 20,\n            \"createdAt\": \"2022-12-13T03:31:43.680Z\",\n            \"updatedAt\": \"2022-12-13T03:31:43.680Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"6397f22aec21735cd38f2581\",\n            \"employeeID\": \"6397f0f0ec21735cd38f257d\",\n            \"timeWorked\": 32,\n            \"createdAt\": \"2022-12-13T03:31:54.327Z\",\n            \"updatedAt\": \"2022-12-13T03:31:54.327Z\",\n            \"__v\": 0\n        }\n    ]\n}"
						}
					]
				}
			],
			"_postman_id": "34da85f1-6922-4fe8-a982-8bcbc8c3425d",
			"description": "Worker Logs will be generated whenever an employee logs their time after volunteering/working.\n\nIt will contain the name of the worker, the date they were clocked in, and the amount of time they worked."
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "Get all Employees",
					"_postman_id": "ff059c57-c80c-4f6e-b560-a1af74a7b29d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/employee",
						"description": "This function requires no extra input from the user, just the correct pathway to employee.\n\nIt will return an employee's information (netID and password) along with the aggregated amount of hours worked from the worker log."
					},
					"response": [
						{
							"id": "8e388ca3-d5c6-411c-8075-4d11ee837897",
							"name": "Get all Employees",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/employee"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-xi24ExJCIzZx1VKLQghWC3friuk\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Dec 2022 04:27:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"employeeData\": [\n        {\n            \"_id\": \"6397f0f0ec21735cd38f257d\",\n            \"netID\": \"kxd200014\",\n            \"totalHours\": 52\n        },\n        {\n            \"_id\": \"6397f27cec21735cd38f2584\",\n            \"netID\": \"dfg345543\",\n            \"totalHours\": 12\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create a new Employee",
					"_postman_id": "645d5b5f-ad78-4e47-a7f6-695a656e2326",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/employee",
						"description": "StartFragment\n\n#### Input:\n\nThe input is a JSON object that has the net ID of the user you are adding to the system along with a password. (This password is a placeholder, eventually OIT will handle this)\n\n#### Output:\n\nThe output is a message that will inform you if the creation was successful or if there was an error.\n\nIf an account already exists with that netID, it will say an account is already created."
					},
					"response": [
						{
							"id": "a8eec139-2cf2-45f0-8c49-5521d2eafad2",
							"name": "Create a new Employee",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"netID\": \"dfg345543\",\r\n    \"password\": \"something23\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/employee"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-DM1aXhqYEMiv84scbmdlHj28g/U\""
								},
								{
									"key": "Date",
									"value": "Tue, 13 Dec 2022 03:33:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully created account!\",\n    \"id\": \"6397f27cec21735cd38f2584\"\n}"
						}
					]
				},
				{
					"name": "Delete employee",
					"_postman_id": "496a7499-c6ab-4177-a15c-92a63a8028d9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:3000/api/v1/employee/639ab61c9d7f91228afd8359",
						"description": "This is a function to delete a specific employee from the database\n\n#### Input:\n\nAt the end of the employee url path, attach the unique MongoID of the employee you are trying to delete\n\n#### Output:\n\nThe output is a message that will inform you if the deletion was successful or if there was an error.\n\nIf it was deleted, it will return a message saying successfully deleted account. If not, it will say the ID is required (if an improper id or no id was provided)"
					},
					"response": [
						{
							"id": "c6845caa-c046-4c3b-a000-ef588df2e1c7",
							"name": "Delete employee",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:3000/api/v1/employee/639ab61c9d7f91228afd8359"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "42"
								},
								{
									"key": "ETag",
									"value": "W/\"2a-7pmSug69piW3OtRxVeMJV92uhM4\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Dec 2022 05:52:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully deleted account\"\n}"
						}
					]
				}
			],
			"_postman_id": "91596f7f-b2cf-4348-b273-1b93ee49f2c0",
			"description": "Employees will have their NetID stored in the system. What separates an employee from a user is the level of privileges they have in regards to inventory. As of now, the privileges have not been implemented yet."
		},
		{
			"name": "Item",
			"item": [
				{
					"name": "Categories",
					"item": [
						{
							"name": "Create a new category",
							"_postman_id": "12168b8e-8d8a-443a-9974-b0dc2ceaa76c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/item/categories",
								"description": "This function is used to create a new category in the system.\n\n#### Input:\n\nThe input is a JSON object that contains:\n\nThe name of the category,\n\nThe description of what fits under the category,\n\nand The color associated with the category.\n\n#### Output:\n\nThe output contains a message that informs you if the category was successfully created or if there was an error in the process."
							},
							"response": [
								{
									"id": "e132235a-6fe7-43b5-b16e-ae3703a32c6c",
									"name": "Create a new category",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Pantry Staples\",\r\n    \"description\": \"Condiments and Spices\",\r\n    \"color\": \"Blue\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:3000/api/v1/item/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "45"
										},
										{
											"key": "ETag",
											"value": "W/\"2d-zVVL+iTnWistf9q25Re/pCuzqI8\""
										},
										{
											"key": "Date",
											"value": "Wed, 07 Dec 2022 22:20:41 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Successfully created a category\"\n}"
								}
							]
						},
						{
							"name": "Get All Categories",
							"_postman_id": "ba0d1f91-0c8a-4eaa-b539-16186240acc7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/item/categories",
								"description": "The function is used to access all the categories that are currently in the system.\n\n#### Input:\n\nNo input is needed for this function\n\n#### Output:\n\nthe output contains an array filled with the current categories stored in the system."
							},
							"response": [
								{
									"id": "617e742b-5252-43dc-8b11-92c8f41922da",
									"name": "Get All Categories",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "http://localhost:3000/api/v1/item/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "424"
										},
										{
											"key": "ETag",
											"value": "W/\"1a8-R6DhOkBw3aC4xQM3iVo+Rmw1a1c\""
										},
										{
											"key": "Date",
											"value": "Wed, 07 Dec 2022 22:24:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"categories\": [\n        {\n            \"_id\": \"639111b9d4e148e6d22e843b\",\n            \"name\": \"Pantry Staples\",\n            \"description\": \"Condiments and Spices\",\n            \"color\": \"Blue\",\n            \"createdAt\": \"2022-12-07T22:20:41.519Z\",\n            \"updatedAt\": \"2022-12-07T22:20:41.519Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"63911280d4e148e6d22e8440\",\n            \"name\": \"Proteins\",\n            \"description\": \"Various meats: Chicken, Beef, Fish, etc.\",\n            \"color\": \"Red\",\n            \"createdAt\": \"2022-12-07T22:24:00.528Z\",\n            \"updatedAt\": \"2022-12-07T22:24:00.528Z\",\n            \"__v\": 0\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get a Specific Category",
							"_postman_id": "3df97558-713e-42c9-8a75-1a04fb324c56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/item/categories/639111b9d4e148e6d22e843b",
								"description": "This function get a specific category from the system.\n\n#### Input:\n\nAt the end of the URL path, you add the MongoDB ID of the Category.\n\n#### Output:\n\nThe output will contain a single object, \"category\"."
							},
							"response": [
								{
									"id": "1f926d2e-1995-4831-83d5-2aa360be4e44",
									"name": "Get a Specific Category",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "http://localhost:3000/api/v1/item/categories/639111b9d4e148e6d22e843b"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "210"
										},
										{
											"key": "ETag",
											"value": "W/\"d2-sioZ5r6Smvj+qcJxHZA2LrdN6dM\""
										},
										{
											"key": "Date",
											"value": "Wed, 07 Dec 2022 22:25:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"category\": {\n        \"_id\": \"639111b9d4e148e6d22e843b\",\n        \"name\": \"Pantry Staples\",\n        \"description\": \"Condiments and Spices\",\n        \"color\": \"Blue\",\n        \"createdAt\": \"2022-12-07T22:20:41.519Z\",\n        \"updatedAt\": \"2022-12-07T22:20:41.519Z\",\n        \"__v\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Update an Existing Category",
							"_postman_id": "546ab059-5a72-4fe9-b019-f7349bc9a56c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/item/categories",
								"description": "This function is used to update the information of the specific category.\n\n#### Input:\n\nThe input is a JSON object that contains:\n\nThe name of the category,\n\nThe description of what fits under the category,\n\nand The color associated with the category.\n\n#### Output:\n\nThe output contains a message that informs you if the category was successfully updated or if there was an error in the process."
							},
							"response": [
								{
									"id": "d345b55d-45c5-4dac-82e4-d78a4447c038",
									"name": "Update an Existing Category",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Pantry Staples\",\r\n    \"description\": \"Condiments, Spices, etc.\",\r\n    \"color\": \"Blue\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "http://localhost:3000/api/v1/item/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Surrogate-Control",
											"value": "no-store"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "44"
										},
										{
											"key": "ETag",
											"value": "W/\"2c-lIU33lkKbDiNWtKvBwdXHdCuCZY\""
										},
										{
											"key": "Date",
											"value": "Mon, 12 Dec 2022 04:32:02 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Successfully updated Category!\"\n}"
								}
							]
						}
					],
					"_postman_id": "5a3daa20-f93a-4651-a9bf-27c24e66398e",
					"description": "Categories are how each item is organized. Categories have names, a description of what type of items fit under this category, and the color associated with these items.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Create New Item",
					"_postman_id": "12e0bb84-1b8e-47cc-a981-5d61e57a622c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/item",
						"description": "This function is used to add a new item to the system.\n\n#### Input:\n\nThe input should have a JSON object that contains:\n\nThe name of the item,\n\nThe location where the item is stored,\n\nThe quantity of items in inventory,\n\nThe size of the items,\n\nThe Mongo ID of the category associated with this item.\n\n#### Output:\n\nThe output will contain a message that will inform you if the creation of the item was successful or if there was an error during the process."
					},
					"response": [
						{
							"id": "9ae9c1c5-05d9-4f2f-adfc-afb98940750c",
							"name": "Create New Item",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Chicken Breast\",\r\n    \"location\": \"aisle 1\",\r\n    \"quantity\": 24,\r\n    \"size\": \"medium\",\r\n    \"categoryID\": \"63911280d4e148e6d22e8440\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/item"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "42"
								},
								{
									"key": "ETag",
									"value": "W/\"2a-FRHqPVGosMA9p1jsoqEXX/KlUxI\""
								},
								{
									"key": "Date",
									"value": "Mon, 12 Dec 2022 04:36:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully created an item\"\n}"
						}
					]
				},
				{
					"name": "Get All Items",
					"_postman_id": "e0c525f6-167b-4996-a0a5-5b96f0f194fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/item",
						"description": "This function is used to get all items currently stored on the system.\n\n#### Input:\n\nNo Input required.\n\n#### Output:\n\nThe output will contain an array which holds all the items currently in the system. If there are no items the array will be empty."
					},
					"response": [
						{
							"id": "9efef247-dd70-4d81-949f-e08dc1917413",
							"name": "Get All Items",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/item"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "474"
								},
								{
									"key": "ETag",
									"value": "W/\"1da-3T3vD8RNDGA0aE1IPBH7IIo7lXM\""
								},
								{
									"key": "Date",
									"value": "Mon, 12 Dec 2022 04:41:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"item\": [\n        {\n            \"_id\": \"6396afd04673f55bb673f979\",\n            \"name\": \"Chicken Breast\",\n            \"location\": \"aisle 1\",\n            \"quantity\": 24,\n            \"size\": \"medium\",\n            \"categoryID\": \"63911280d4e148e6d22e8440\",\n            \"createdAt\": \"2022-12-12T04:36:32.324Z\",\n            \"updatedAt\": \"2022-12-12T04:36:32.324Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"6396b0e54673f55bb673f97c\",\n            \"name\": \"Paprika\",\n            \"location\": \"aisle 4\",\n            \"quantity\": 39,\n            \"size\": \"small\",\n            \"categoryID\": \"639111b9d4e148e6d22e843b\",\n            \"createdAt\": \"2022-12-12T04:41:09.783Z\",\n            \"updatedAt\": \"2022-12-12T04:41:09.783Z\",\n            \"__v\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Specific Item",
					"_postman_id": "ebad55e1-5192-49f1-a923-78c63c2194cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/item/6396b0e54673f55bb673f97c",
						"description": "This function is used to access a specific item.\n\n#### Input:\n\nYou need the MongoID of the Item to be sent as a path parameter in the URL (Look at example URL).\n\n#### Output:\n\nThe output will contain the item if it can be found by the MongoID. If it couldn't be found then it will send back an error message that the item you are looking for doesn't exist."
					},
					"response": [
						{
							"id": "79e81d17-3597-4f05-bb52-02236271baad",
							"name": "Get Specific Item",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:3000/api/v1/item/6396b0e54673f55bb673f97c"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "236"
								},
								{
									"key": "ETag",
									"value": "W/\"ec-DJBlRrOrRy+rtMAUi5UZsONHyos\""
								},
								{
									"key": "Date",
									"value": "Mon, 12 Dec 2022 04:41:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"item\": {\n        \"_id\": \"6396b0e54673f55bb673f97c\",\n        \"name\": \"Paprika\",\n        \"location\": \"aisle 4\",\n        \"quantity\": 39,\n        \"size\": \"small\",\n        \"categoryID\": \"639111b9d4e148e6d22e843b\",\n        \"createdAt\": \"2022-12-12T04:41:09.783Z\",\n        \"updatedAt\": \"2022-12-12T04:41:09.783Z\",\n        \"__v\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Replace Existing Item",
					"_postman_id": "54e4ecae-8616-487f-a5cd-bf68430b3dbc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/item",
						"description": "This function is used to update an existing item's information.\n\n#### Input:\n\nYou send a JSON object as part of the input.\n\nThe JSON object should contain:\n\nThe name of the item,\n\nThe new location where it is stored,\n\nthe new amount of of items in the inventory,\n\nthe new size,\n\nand the new category.\n\n#### Output:\n\nThe output will contain a message that will inform you if the item was successfully updated or if there was an error that occurred."
					},
					"response": [
						{
							"id": "87952139-138e-47c3-972a-9a5833810d25",
							"name": "Replace Existing Item",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Paprika\",\r\n    \"location\": \"aisle 5\",\r\n    \"quantity\": 20,\r\n    \"size\": \"small\",\r\n    \"categoryID\": \"639111b9d4e148e6d22e843b\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:3000/api/v1/item"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Surrogate-Control",
									"value": "no-store"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "ETag",
									"value": "W/\"28-UDNiWdv8rqsY3OY0JT5aI3Kf4vw\""
								},
								{
									"key": "Date",
									"value": "Mon, 12 Dec 2022 04:43:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Successfully updated item!\"\n}"
						}
					]
				}
			],
			"_postman_id": "a426c800-fbbd-40bf-a6d5-01605f6c195c",
			"description": "Items will represent the inventory that is currently stored in the Comet Cupboard. Items contain the name, the location where they are stored, the amount currently in inventory, the size of the item, and the category it belongs to."
		},
		{
			"name": "Title of the API",
			"_postman_id": "a304448d-fa2b-49cb-a877-220e51e76b90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:3000/api/v1/",
				"description": "This function gets the title of the API and was mostly used for testing if the API was running or not."
			},
			"response": [
				{
					"id": "89a71100-65eb-4d9f-ada4-3961b6f7ab12",
					"name": "Title of the API",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Vary",
							"value": "Origin, Accept-Encoding"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Surrogate-Control",
							"value": "no-store"
						},
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate, proxy-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "18"
						},
						{
							"key": "ETag",
							"value": "W/\"12-FkVpidaBqhaGO3Gd7DCpaSPLeRo\""
						},
						{
							"key": "Date",
							"value": "Thu, 15 Dec 2022 06:00:15 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "Comet Cupboard API"
				}
			]
		}
	]
}
