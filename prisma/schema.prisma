generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cartItems {
  cartID   Int
  itemID   Int
  quantity Int?
  value    Int?
  student  student @relation(fields: [cartID], references: [cartID], onDelete: NoAction, onUpdate: NoAction)
  item     item    @relation(fields: [itemID], references: [itemID], onDelete: NoAction, onUpdate: NoAction)

  @@id([cartID, itemID])
}

model categories {
  classification String @id @db.VarChar(20)
  items          Int?
  item           item[]
}

model checkout {
  transactionID Int             @id
  workerID      Int?
  customerID    String?         @db.VarChar(9)
  checkoutDate  DateTime?       @db.Timestamp(6)
  student       student?        @relation(fields: [customerID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
  employee      employee?       @relation(fields: [workerID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
  checkoutItems checkoutItems[]
}

model checkoutItems {
  transactionID Int
  itemID        Int
  quantity      Int?
  value         Int?
  item          item     @relation(fields: [itemID], references: [itemID], onDelete: NoAction, onUpdate: NoAction)
  checkout      checkout @relation(fields: [transactionID], references: [transactionID], onDelete: NoAction, onUpdate: NoAction)

  @@id([transactionID, itemID])
}

model donors {
  ID               Int       @id
  affiliation      String?   @db.VarChar(100)
  donationCount    Int?
  lastDonation     DateTime? @db.Timestamp(6)
  donationDescript String?   @db.VarChar(200)
  estDonValue      Decimal?  @db.Decimal
}

model employee {
  ID          Int        @id
  studentID   String?    @db.VarChar(9)
  hoursWorked Int?
  isPaid      Boolean?
  salary      Decimal?   @db.Decimal
  checkout    checkout[]
  student     student?   @relation(fields: [studentID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
}

model item {
  itemID         Int             @id
  name           String?         @db.VarChar(20)
  value          Int?
  classification String?         @db.VarChar(20)
  imgURL         String?         @db.VarChar(200)
  stock          Int?
  expirationDate DateTime?       @db.Date
  cartItems      cartItems[]
  checkoutItems  checkoutItems[]
  categories     categories?     @relation(fields: [classification], references: [classification], onDelete: NoAction, onUpdate: NoAction)
}

model student {
  ID             String      @id @db.VarChar(9)
  fname          String?     @db.VarChar(20)
  surname        String?     @db.VarChar(20)
  grade          String?     @db.VarChar(9)
  numVisits      Int?
  current_status status?
  major          String?     @db.VarChar(50)
  gender         String?     @db.VarChar(1)
  lastLogin      DateTime?   @db.Timestamp(6)
  cartID         Int?        @unique @default(0)
  totalValue     Int?
  cartItems      cartItems[]
  checkout       checkout[]
  employee       employee[]
}

enum status {
  Active
  Inactive
}
