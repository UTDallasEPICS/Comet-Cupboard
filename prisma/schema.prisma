generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  netID     String     @id @map("net_id")
  // firstName     String
  // lastName      String
  // year          Int
  // major         String
  // birthDate     DateTime
  // currentStatus Boolean
  Volunteer Volunteer?
  Admin     Admin?
  Cart      Cart?
  Order     Order[]

  @@map("user")
}

model Volunteer {
  User            User             @relation(fields: [netID], references: [netID])
  netID           String           @id @map("net_id")
  VolunteerShifts VolunteerShift[]

  @@map("volunteer")
}

model VolunteerShift {
  Volunteer Volunteer @relation(fields: [netID], references: [netID])
  netID     String    @map("net_id")
  startTime DateTime  @map("start_time")
  endTime   DateTime  @map("end_time")

  @@id(name: "volunteerShiftID", [netID, startTime])
  @@map("volunteer_shift")
}

model Admin {
  User  User   @relation(fields: [netID], references: [netID])
  netID String @id @map("net_id")

  @@map("admin")
}

model Category {
  name  String @id @map("name")
  Items Item[]

  @@map("category")
}

model Item {
  itemID       String      @id @map("item_id")
  name         String      @map("name")
  Category     Category    @relation(fields: [categoryName], references: [name])
  categoryName String      @map("category_name")
  quantity     Int         @default(0) @map("quantity")
  imgURL       String      @map("img_url")
  CartItems    CartItem[]
  OrderItem    OrderItem[]
  Deals        Deal[]

  @@map("item")
}

model Cart {
  User      User       @relation(fields: [cartID], references: [netID])
  cartID    String     @id @map("cart_id")
  date      DateTime   @map("date")
  CartItems CartItem[]
  pending   Boolean    @default(false) @map("pending")

  @@map("cart")
}

model CartItem {
  Item   Item   @relation(fields: [itemID], references: [itemID])
  itemID String @map("item_id")
  Cart   Cart   @relation(fields: [cartID], references: [cartID])
  cartID String @map("cart_id")
  count  Int    @map("count")

  @@id(name: "cartItemID", [itemID, cartID])
  @@map("cart_item")
}

model Order {
  orderID    String      @id @map("order_id")
  User       User        @relation(fields: [netID], references: [netID])
  netID      String      @map("net_id")
  date       DateTime    @map("date")
  OrderItems OrderItem[]

  @@map("order")
}

model OrderItem {
  Item    Item   @relation(fields: [itemID], references: [itemID])
  itemID  String @map("item_id")
  Order   Order  @relation(fields: [orderID], references: [orderID])
  orderID String @map("order_id")
  count   Int    @map("count")

  @@id(name: "orderItemID", [itemID, orderID])
  @@map("order_item")
}

model Deal {
  dealID        Int      @id @map("deal_id")
  Item          Item     @relation(fields: [itemID], references: [itemID])
  itemID        String   @map("item_id")
  actualCount   Int      @map("actual_count")
  adjustedCount Int      @map("adjusted_count")
  startDate     DateTime @map("start_date")
  endDate       DateTime @map("end_date")

  @@map("deal")
}
